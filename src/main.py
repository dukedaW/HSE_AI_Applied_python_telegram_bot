import asyncio
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message

import sys
import os

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.config import TELEGRAM_TOKEN
from src.handlers import routers

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()
dp.include_routers(*routers)


# dp.message.middleware(LoggingMiddleware())
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç—Ä–µ–∫–µ—Ä –∫–∞–ª–æ—Ä–∏–π\n"
        "/help - –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥\n")


@dp.message(Command("help"))
async def cmd_help(message: Message):
    text = (
        "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n"
        "/set_profile - —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n"
        "/show_profile - –ø–æ–∫–∞–∑–∞—Ç—å –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ\n"
        "/update_profile - –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ\n"
        "/log_water - –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—ã–ø–∏—Ç–æ–π –≤–æ–¥–µ, –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
        "/log_calories - –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–Ω—ã–º –∫–∞–ª–æ—Ä–∏—è–º\n"
        "/check_progress - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≤—Å–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º (–≤–æ–¥–∞ –∏ –∫–∞–ª–æ—Ä–∏–∏)\n"
        "/log_workout - –∑–∞–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ / —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö"
    )
    await message.answer(text)



async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
